# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 1: Load the dataset
url = 'https://www.w3schools.com/python/datasets/cars.csv'
data = pd.read_csv(url)

# Display the first few rows of the dataset
print("Car Dataset:")
print(data.head())

# Step 2: Preprocess the data
# Check for missing values
print("\nChecking for missing values:")
print(data.isnull().sum())

# If necessary, encode categorical variables (e.g., 'Model' and 'Origin')
data = pd.get_dummies(data, columns=['Model', 'Origin'], drop_first=True)

# Step 3: Define features and target variable
X = data.drop('MPG', axis=1)  # Features
y = data['MPG']                # Target variable

# Step 4: Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Train the Multiple Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Make predictions
y_pred = model.predict(X_test)

# Step 7: Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"\nMean Squared Error: {mse:.2f}")
print(f"R-squared: {r2:.2f}")

# Optional: Plotting Actual vs Predicted values
plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, color='blue')
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', lw=2)
plt.xlabel('Actual MPG')
plt.ylabel('Predicted MPG')
plt.title('Actual vs Predicted MPG')
plt.grid()
plt.show()
