# Import necessary libraries
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 1: Create the dataset
x = np.array([1, 2, 3, 4, 5, 6, 7, 8]).reshape(-1, 1)  # Reshaping to a 2D array for sklearn
y = np.array([7, 14, 15, 18, 19, 21, 26, 23])

# Step 2: Create and fit the linear regression model
model = LinearRegression()
model.fit(x, y)

# Step 3: Get the coefficients (slope and intercept)
b1 = model.coef_[0]  # slope
b0 = model.intercept_  # intercept

print(f"Estimated Coefficients: b0 (intercept) = {b0:.2f}, b1 (slope) = {b1:.2f}")

# Step 4: Make predictions using the model
y_pred = model.predict(x)

# Step 5: Analyze model performance
# R-squared
r2 = r2_score(y, y_pred)
# Mean Squared Error
mse = mean_squared_error(y, y_pred)
# Root Mean Squared Error
rmse = np.sqrt(mse)

print(f"R-squared: {r2:.2f}")
print(f"Mean Squared Error: {mse:.2f}")
print(f"Root Mean Squared Error: {rmse:.2f}")

# Step 6: Visualize the regression line
plt.scatter(x, y, color='blue', label='Actual data points')
plt.plot(x, y_pred, color='red', label='Regression line')
plt.title("Simple Linear Regression")
plt.xlabel("x")
plt.ylabel("y")
plt.legend()
plt.show()
