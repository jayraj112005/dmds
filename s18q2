# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

# Step 1: Define the data
x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
y = np.array([7, 14, 15, 18, 19, 21, 26, 23])

# Step 2: Reshape the data for sklearn
X = x.reshape(-1, 1)  # Reshape x to be a 2D array

# Step 3: Create and fit the linear regression model
model = LinearRegression()
model.fit(X, y)

# Step 4: Extract the coefficients
b0 = model.intercept_  # y-intercept
b1 = model.coef_[0]    # slope

print(f"Estimated coefficients:\nb0 (intercept): {b0}\nb1 (slope): {b1}")

# Step 5: Make predictions
y_pred = model.predict(X)

# Step 6: Analyze the performance of the model
mse = mean_squared_error(y, y_pred)
mae = mean_absolute_error(y, y_pred)
r2 = r2_score(y, y_pred)

print(f"\nPerformance Metrics:")
print(f"Mean Squared Error (MSE): {mse:.2f}")
print(f"Mean Absolute Error (MAE): {mae:.2f}")
print(f"RÂ² Score: {r2:.2f}")

# Step 7: Plot the results
plt.figure(figsize=(10, 6))
plt.scatter(x, y, color='blue', label='Actual data points')
plt.plot(x, y_pred, color='red', label='Regression line')
plt.title('Simple Linear Regression')
plt.xlabel('X values')
plt.ylabel('Y values')
plt.legend()
plt.grid()
plt.show()
